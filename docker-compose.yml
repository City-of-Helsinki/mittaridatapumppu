# mittaridatapumppu-deviceregistry

version: '3.8'

services:

  endpoint-digita:
    image: ghcr.io/city-of-helsinki/mittaridatapumppu-endpoint
    ports:
      - "8001:8000"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      # Endpoint config
      ALLOWED_IP_ADDRESSES: "127.0.0.1"
      AUTH_TOKEN: "abcd1234"
      DATA_SOURCE_NAME: "digita.thingpark.http"
      ENDPOINT_PATH: "/digita/v2"
      HTTP_REQUESTHANDLER: "endpoints.digita.aiothingpark"
      # Kafka client config
      KAFKA_HOST: "kafka"
      KAFKA_PORT: 9092
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      KAFKA_GROUP_ID: "digita_dev"
      KAFKA_PARSED_DATA_TOPIC_NAME: "digita.parseddata"
      KAFKA_RAW_DATA_TOPIC_NAME: "digita.rawdata"
      # Debug config
      LOG_LEVEL: "DEBUG"
      DEBUG: 1

  parser-digita:
    image: ghcr.io/city-of-helsinki/mittaridatapumppu-parser
    depends_on:
      kafka:
        condition: service_healthy
    restart: unless-stopped
    environment:
      # Kafka client config
      KAFKA_HOST: "kafka"
      KAFKA_PORT: 9092
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      KAFKA_GROUP_ID: "digita_dev"
      KAFKA_PARSED_DATA_TOPIC_NAME: "digita.parseddata"
      KAFKA_RAW_DATA_TOPIC_NAME: "digita.rawdata"
      # Parser config
      DEVICE_REGISTRY_URL: "http://devreg:8000/api/v1"
      DEVICE_REGISTRY_TOKEN: b48455759b691baf3b811ba437ce9e581fc0a37e
      # Debug config
      LOG_LEVEL: "DEBUG"
      DEBUG: 1
      DEV_SERVER: 1

  persister-influxdb:
    image: ghcr.io/city-of-helsinki/mittaridatapumppu-persister
    depends_on:
      kafka:
        condition: service_healthy
    restart: unless-stopped
    environment:
      # Kafka client config
      KAFKA_HOST: "kafka"
      KAFKA_PORT: 9092
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      KAFKA_GROUP_ID: "digita_dev"
      KAFKA_PARSED_DATA_TOPIC_NAME: "digita.parseddata"
      KAFKA_RAW_DATA_TOPIC_NAME: "digita.rawdata"
      # Persister config
      DEVICE_REGISTRY_URL: "http://devreg:8000/api/v1"
      DEVICE_REGISTRY_TOKEN: b48455759b691baf3b811ba437ce9e581fc0a37e
      # InfluxDB config
      INFLUXDB_URL: "https://influx.fvh.io"
      INFLUXDB_ORG: "Testing"
      INFLUXDB_BUCKET: "DigitaTest"
      INFLUXDB_TOKEN: "-DWlK7UjluBsFRgQ6ZTU82zfir89lAdY00hSvm-hhM-z2cmA-TwRekLj4C_KxU4jAU23H3vTkgGIQjqs68xHWg=="
      # Debug config
      LOG_LEVEL: "DEBUG"
      DEBUG: 1
      DEV_SERVER: 1

  kafka:
    image: bitnami/kafka:3.4
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      # Kafka KRaft settings
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: "controller,broker"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "0@kafka:9093"
      # Listeners
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://:9092"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
    healthcheck:
      interval: 10s
      retries: 3
      test: kafka-topics.sh --bootstrap-server kafka:9092 --topic hc --create --if-not-exists && kafka-topics.sh --bootstrap-server kafka:9092 --topic hc --describe
      timeout: 5s

  devreg:
    image: ghcr.io/city-of-helsinki/mittaridatapumppu-deviceregistry
    build: .
    volumes:
      - media:/media
    ports:
      - "8000:8000"
    environment:
      # Device registry config
      DJANGO_SETTINGS_MODULE: "deviceregistry.settings"
      ALLOWED_HOSTS:
      SECRET_KEY: # PostgreSQL config

      DATABASE_HOST:
      DATABASE_USER:
      DATABASE_PASSWORD:
      DATABASE_PORT: # Debug config

      DEBUG: 1
    depends_on:
      - db

  db:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/

volumes:
  postgres_data:
  media:
  kafka_data:
