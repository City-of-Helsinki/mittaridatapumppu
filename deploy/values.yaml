# Default values for mittaridatapumppu.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


endpoint:
  replicaCount: 3
  image:
    repository: ghcr.io/city-of-helsinki/mittaridatapumppu-endpoint
    pullPolicy: Always
    # pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v0.1.1"
  service:
    type: ClusterIP
    port: 80
  allowedIpAddresses: 127.0.0.1
  authToken: abcd1234
  dataSourceName: "digita.thingpark.http"
  endpointPath: "/digita/v2"
  httpRequestHandler: "endpoints.digita.aiothingpark"

deviceregistry:
  replicaCount: 1
  image:
    repository: ghcr.io/city-of-helsinki/mittaridatapumppu-deviceregistry
    pullPolicy: Always
    # pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v0.1.1"
  service:
    type: ClusterIP
    port: 80
  databaseHost: "postgresql"
  databaseUser: "postgres"
  databasePassword: "postgres"
  databasePort: "5432"
  allowedHosts:
    - localhost
  secretKey: "django-insecure-vz&7byj9esv1ncrv(7805g7w%h+-(-k_q82q(woh%1pcxr)^jf"

parser:
  replicaCount: 1
  image:
    repository: ghcr.io/city-of-helsinki/mittaridatapumppu-parser
    # pullPolicy: IfNotPresent
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v0.1.1"
  service:
    type: ClusterIP
    port: 80
  deviceRegistryUrl: "http://deviceregistry/api/v1"
  deviceRegistryToken: "1e172012b4404fc4b3d051710f8232a422fa8eaa"

kafka:
  kafkaHost: "kafka-kafka-bootstrap"
  kafkaPort: "9092"
  kafkaBootstrapServers: "kafka-kafka-bootstrap:9092"
  kafkaGroupId: "digita_dev"
  kafkaParsedDataTopicName: "digita.parseddata"
  kafkaRawDataTopicName: "digita.rawdata"

postgresql:
  enabled: true
  auth:
    postgresPassword: "postgres"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: endpoint.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
